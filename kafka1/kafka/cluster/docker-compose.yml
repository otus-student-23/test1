version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.9
    container_name: zookeeper-kafka
#    healthcheck:
#      test: "[[ $$(echo srvr | nc localhost 2181 | grep -oG 'Mode: standalone') = \"Mode: standalone\" ]]"
#      interval: 10s
#      timeout: 1s
#      retries: 30
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka1:
    image: confluentinc/cp-kafka:7.0.9
    container_name: kafka1-kafka
    depends_on:
      - zookeeper
#    depends_on:
#      zookeeper:
#        condition: service_healthy
#    healthcheck:
#      test: "test $$( /usr/bin/zookeeper-shell zookeeper:2181 get /brokers/ids/1 | grep { ) != ''"
#      interval: 3s
#      timeout: 2s
#      retries: 300
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9191,PLAINTEXT_HOST://localhost:9091
      BOOTSTRAP_SERVERS: kafka1:9191,kafka2:9192,kafka3:9193,kafka4:9194,kafka5:9195
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
#      - "9191:9191"
      - "9091:9091"

  kafka2:
    image: confluentinc/cp-kafka:7.0.9
    container_name: kafka2-kafka
    depends_on:
      - zookeeper
#    depends_on:
#      zookeeper:
#        condition: service_healthy
#    healthcheck:
#      test: "test $$( /usr/bin/zookeeper-shell zookeeper:2181 get /brokers/ids/1 | grep { ) != ''"
#      interval: 3s
#      timeout: 2s
#      retries: 300
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9192,PLAINTEXT_HOST://localhost:9092
      BOOTSTRAP_SERVERS: kafka1:9191,kafka2:9192,kafka3:9193,kafka4:9194,kafka5:9195
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
#      - "9192:9192"
      - "9092:9092"

  kafka3:
    image: confluentinc/cp-kafka:7.0.9
    container_name: kafka3-kafka
    depends_on:
      - zookeeper
#    depends_on:
#      zookeeper:
#        condition: service_healthy
#    healthcheck:
#      test: "test $$( /usr/bin/zookeeper-shell zookeeper:2181 get /brokers/ids/1 | grep { ) != ''"
#      interval: 3s
#      timeout: 2s
#      retries: 300
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9193,PLAINTEXT_HOST://localhost:9093
      BOOTSTRAP_SERVERS: kafka1:9191,kafka2:9192,kafka3:9193,kafka4:9194,kafka5:9195
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
#      - "9193:9193"
      - "9093:9093"
  kafka4:
    image: confluentinc/cp-kafka:7.0.9
    container_name: kafka4-kafka
    depends_on:
      - zookeeper
#    depends_on:
#      zookeeper:
#        condition: service_healthy
#    healthcheck:
#      test: "test $$( /usr/bin/zookeeper-shell zookeeper:2181 get /brokers/ids/1 | grep { ) != ''"
#      interval: 3s
#      timeout: 2s
#      retries: 300
    environment:
      KAFKA_BROKER_ID: 4
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka4:9194,PLAINTEXT_HOST://localhost:9094
      BOOTSTRAP_SERVERS: kafka1:9191,kafka2:9192,kafka3:9193,kafka4:9194,kafka5:9195
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
#      - "9194:9194"
      - "9094:9094"

  kafka5:
    image: confluentinc/cp-kafka:7.0.9
    container_name: kafka5-kafka
    depends_on:
      - zookeeper
#    depends_on:
#      zookeeper:
#        condition: service_healthy
#    healthcheck:
#      test: "test $$( /usr/bin/zookeeper-shell zookeeper:2181 get /brokers/ids/1 | grep { ) != ''"
#      interval: 3s
#      timeout: 2s
#      retries: 300
    environment:
      KAFKA_BROKER_ID: 5
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka5:9195,PLAINTEXT_HOST://localhost:9095
      BOOTSTRAP_SERVERS: kafka1:9191,kafka2:9192,kafka3:9193,kafka4:9194,kafka5:9195
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
#      - "9195:9195"
      - "9095:9095"

  kafdrop:
# http://localhost:9000/
    image: obsidiandynamics/kafdrop:4.0.1
    container_name: kafdrop-kafka
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka2:9192"
#  JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
# add SCHEMAREGISTRY_CONNECT
      SCHEMAREGISTRY_CONNECT: "http://schema-registry:8081"
    depends_on:
      - "kafka2"

  schema-registry:
# http://localhost:8081/subjects
# http://localhost:8081/subjects/topic1-value/versions/1
# http://localhost:8081/schemas/ids/1
    image: confluentinc/cp-schema-registry:7.5.3
    hostname: schema-registry
    depends_on:
      - kafka2
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka2:9192,PLAINTEXT_INTERNAL://localhost:9092
      SCHEMA_REGISTRY_DEBUG: 'true'

  kafka-rest:
# http://localhost:8082/topics
    image: confluentinc/cp-kafka-rest:4.1.1
    hostname: kafka-rest
    ports:
      - "8082:8082"
    depends_on:
      - schema-registry
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_DEBUG: "true"
      KAFKA_REST_SCHEMA_REGISTRY_URL: schema-registry:8081
      KAFKA_REST_HOST_NAME: kafka-rest
      KAFKA_REST_LISTENERS: http://kafka-rest:8082

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:53a6553765a806eda9905c43bfcfe09da6812035
    ports:
      - 8083:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
